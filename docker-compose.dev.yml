services:
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app/backend
      - ./predictor:/app/predictor
      - backend_models:/app/backend/app/models/trained
    env_file:
      - ./backend/.env
    environment:
      - PYTHONUNBUFFERED=1
      - BACKEND_CORS_ORIGINS=["http://localhost:3000","http://frontend:3000"]
      - DATABASE_URL=postgresql://smartshelf:smartshelf_password@db:5432/smartshelf_db
      - DEBUG=true
      - SECRET_KEY=dev-secret-key
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload --reload-dir /app
    restart: unless-stopped
    depends_on:
      - db

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    environment:
      - VITE_API_URL=http://localhost:8000
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"

  db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_USER=smartshelf
      - POSTGRES_PASSWORD=smartshelf_password
      - POSTGRES_DB=smartshelf_db
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U smartshelf -d smartshelf_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  backend_models:
    driver: local
  postgres_data:
    driver: local 